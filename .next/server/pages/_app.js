/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./context/constants.js":
/*!******************************!*\
  !*** ./context/constants.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BOND_CONTRACT\": () => (/* binding */ BOND_CONTRACT),\n/* harmony export */   \"BOND_CONTRACT_ABI\": () => (/* binding */ BOND_CONTRACT_ABI),\n/* harmony export */   \"BOND_CONTRACT_ADDRESS\": () => (/* binding */ BOND_CONTRACT_ADDRESS),\n/* harmony export */   \"OWNER_ADDRESS\": () => (/* binding */ OWNER_ADDRESS),\n/* harmony export */   \"VOTING_CONTRACT\": () => (/* binding */ VOTING_CONTRACT),\n/* harmony export */   \"VOTING_CONTRACT_ABI\": () => (/* binding */ VOTING_CONTRACT_ABI),\n/* harmony export */   \"VOTING_CONTRACT_ADDRESS\": () => (/* binding */ VOTING_CONTRACT_ADDRESS),\n/* harmony export */   \"checkIfWalletIsConnected\": () => (/* binding */ checkIfWalletIsConnected),\n/* harmony export */   \"connectWallet\": () => (/* binding */ connectWallet),\n/* harmony export */   \"handleNetworkSwitch\": () => (/* binding */ handleNetworkSwitch)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3modal */ \"web3modal\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _artifacts_contracts_VotingOrganization_sol_VotingOrganization_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../artifacts/contracts/VotingOrganization.sol/VotingOrganization.json */ \"./artifacts/contracts/VotingOrganization.sol/VotingOrganization.json\");\n/* harmony import */ var _artifacts_contracts_ElectoralBond_sol_ElectoralBond_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../artifacts/contracts/ElectoralBond.sol/ElectoralBond.json */ \"./artifacts/contracts/ElectoralBond.sol/ElectoralBond.json\");\n\n\n//IMPORT CONTRACT ABI\n\n\nconst OWNER_ADDRESS = \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\";\nconst VOTING_CONTRACT_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nconst VOTING_CONTRACT_ABI = _artifacts_contracts_VotingOrganization_sol_VotingOrganization_json__WEBPACK_IMPORTED_MODULE_2__.abi;\nconst BOND_CONTRACT_ADDRESS = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\nconst BOND_CONTRACT_ABI = _artifacts_contracts_ElectoralBond_sol_ElectoralBond_json__WEBPACK_IMPORTED_MODULE_3__.abi;\n//NETWORK\nconst networks = {\n    polygon_amoy: {\n        chainId: `0x${Number(80002).toString(16)}`,\n        chainName: \"Polygon Amoy\",\n        nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc-amoy.polygon.technology/\"\n        ],\n        blockExplorerUrls: [\n            \"https://www.oklink.com/amoy\"\n        ]\n    },\n    polygon_mumbai: {\n        chainId: `0x${Number(80001).toString(16)}`,\n        chainName: \"Polygon Mumbai\",\n        nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/polygon_mumbai\"\n        ],\n        blockExplorerUrls: [\n            \"https://mumbai.polygonscan.com/\"\n        ]\n    },\n    polygon: {\n        chainId: `0x${Number(137).toString(16)}`,\n        chainName: \"Polygon Mainnet\",\n        nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/polygon\"\n        ],\n        blockExplorerUrls: [\n            \"https://polygonscan.com/\"\n        ]\n    },\n    bsc: {\n        chainId: `0x${Number(56).toString(16)}`,\n        chainName: \"Binance Smart Chain Mainnet\",\n        nativeCurrency: {\n            name: \"Binance Chain Native Token\",\n            symbol: \"BNB\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/bsc\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    base_mainnet: {\n        chainId: `0x${Number(8453).toString(16)}`,\n        chainName: \"Base Mainnet\",\n        nativeCurrency: {\n            name: \"ETH\",\n            symbol: \"ETH\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://mainnet.base.org/\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    base_sepolia: {\n        chainId: `0x${Number(84532).toString(16)}`,\n        chainName: \"Base Sepolia\",\n        nativeCurrency: {\n            name: \"ETH\",\n            symbol: \"ETH\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://sepolia.base.org\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    localhost: {\n        chainId: `0x${Number(31337).toString(16)}`,\n        chainName: \"localhost\",\n        nativeCurrency: {\n            name: \"GO\",\n            symbol: \"GO\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"http://127.0.0.1:8545/\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    open_campus: {\n        chainId: `0x${Number(656476).toString(16)}`,\n        chainName: \"Open Campus\",\n        nativeCurrency: {\n            name: \"EDU\",\n            symbol: \"EDU\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.open-campus-codex.gelato.digital\"\n        ],\n        blockExplorerUrls: [\n            \"https://opencampus-codex.blockscout.com\"\n        ]\n    }\n};\nconst changeNetwork = async ({ networkName  })=>{\n    try {\n        if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n        await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n                {\n                    ...networks[networkName]\n                }, \n            ]\n        });\n    } catch (err) {\n        console.log(err.message);\n    }\n};\nconst handleNetworkSwitch = async ()=>{\n    const networkName = \"localhost\";\n    await changeNetwork({\n        networkName\n    });\n};\nconst checkIfWalletIsConnected = async ()=>{\n    if (!window.ethereum) return console.log(\"Please Install MetaMask\");\n    const network = await handleNetworkSwitch();\n    const account = await window.ethereum.request({\n        method: \"eth_accounts\"\n    });\n    if (account.length) {\n        return account[0];\n    } else {\n        console.log(\"Please Install MetaMask & Connect, Reload\");\n    }\n};\nconst connectWallet = async ()=>{\n    try {\n        if (!window.ethereum) return alert(\"Please install MetaMask\");\n        const network = await handleNetworkSwitch();\n        const accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n        });\n        return accounts[0];\n    } catch (error) {\n        console.log(error);\n    }\n};\n//CONTRACT\n//---FETCHING SMART CONTRACT\nconst fetchContract = (address, abi, signer)=>new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(address, abi, signer);\nconst VOTING_CONTRACT = async ()=>{\n    try {\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_1___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = fetchContract(VOTING_CONTRACT_ADDRESS, VOTING_CONTRACT_ABI, signer);\n        return contract;\n    } catch (error) {\n        console.log(\"Something went wrong while connecting with contract\", error);\n    }\n};\nconst BOND_CONTRACT = async ()=>{\n    try {\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_1___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = fetchContract(BOND_CONTRACT_ADDRESS, BOND_CONTRACT_ABI, signer);\n        return contract;\n    } catch (error) {\n        console.log(\"Something went wrong while connecting with bond contract\", error);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/constants.js\n");

/***/ }),

/***/ "./context/context.jsx":
/*!*****************************!*\
  !*** ./context/context.jsx ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VOTER_DAPP_PROVIDER\": () => (/* binding */ VOTER_DAPP_PROVIDER),\n/* harmony export */   \"VOTING_DAPP_CONTEXT\": () => (/* binding */ VOTING_DAPP_CONTEXT)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constants */ \"./context/constants.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_hot_toast__WEBPACK_IMPORTED_MODULE_4__]);\nreact_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n//INTERNAL  IMPORT\n\nconst VOTING_DAPP_CONTEXT = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst VOTER_DAPP_PROVIDER = ({ children  })=>{\n    const VOTING_DAPP = \"Voting Dapp\";\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { 0: loader , 1: setLoader  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { 0: address , 1: setAddress  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const { 0: checkVote , 1: setCheckVote  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const notifySuccess = (msg)=>react_hot_toast__WEBPACK_IMPORTED_MODULE_4__[\"default\"].success(msg, {\n            duration: 2000\n        });\n    const notifyError = (msg)=>react_hot_toast__WEBPACK_IMPORTED_MODULE_4__[\"default\"].error(msg, {\n            duration: 2000\n        });\n    const REGISTER_CANDIDATE = async (updateCandidate, image, pdf)=>{\n        const { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails ,  } = updateCandidate;\n        if (!_name || !_nominationForm || !_affidavit || !_criminalAntecedents || !_assetsAndLiabilities || !_educationalQualifications || !_electoralRollEntry || !_securityDeposit || !_partyAffiliation || !_oathOrAffirmation || !_photographs || !_proofOfAge || !_proofOfAddress || !_panCardDetails || !_voterIdCardDetails || !image || !pdf) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"Registering Candidate, kindly wait...\");\n        setLoader(true);\n        const votingContract = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        const bondContract = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.BOND_CONTRACT)();\n        const data = JSON.stringify({\n            _name,\n            _nominationForm,\n            _affidavit,\n            _criminalAntecedents,\n            _assetsAndLiabilities,\n            _educationalQualifications,\n            _electoralRollEntry,\n            _securityDeposit,\n            _partyAffiliation,\n            _oathOrAffirmation,\n            _photographs,\n            _proofOfAge,\n            _proofOfAddress,\n            _panCardDetails,\n            _voterIdCardDetails,\n            image,\n            pdf\n        });\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_3___default()({\n                method: \"POST\",\n                url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n                data: data,\n                headers: {\n                    pinata_api_key: \"fdc22d6616dc5d66dfff\",\n                    pinata_secret_api_key: \"fd5c71930ed975f9e88af5d163df6ef67dd227bf21bda86f33024396e5579b31\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n            console.log(url);\n            const votingTransaction = await votingContract.registerCandidate(_name, url);\n            const bondTransaction = await bondContract.registerDonee();\n            await votingTransaction.wait();\n            await bondTransaction.wait();\n            notifySuccess(\"Successfully Registered Candidate\");\n            setLoader(false);\n            router.push(\"/all-candidates\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"Registration failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const REGISTER_VOTER = async (updateVoter, image, pdf)=>{\n        const { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode ,  } = updateVoter;\n        if (!_name || !_voterAddress || !_photograph || !_parentOrSpouseName || !_gender || !_dobOrAge || !_addressDetails || !_epicNumber || !_partNumberAndName || !_assemblyConstituencyNumberAndName || !_issuingAuthoritySignature || !_hologramAndBarcode || !image || !pdf) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"Registering Voter, kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        const data = JSON.stringify({\n            _name,\n            _voterAddress,\n            _photograph,\n            _parentOrSpouseName,\n            _gender,\n            _dobOrAge,\n            _addressDetails,\n            _epicNumber,\n            _partNumberAndName,\n            _assemblyConstituencyNumberAndName,\n            _issuingAuthoritySignature,\n            _hologramAndBarcode,\n            image,\n            pdf\n        });\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_3___default()({\n                method: \"POST\",\n                url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n                data: data,\n                headers: {\n                    pinata_api_key: \"fdc22d6616dc5d66dfff\",\n                    pinata_secret_api_key: \"fd5c71930ed975f9e88af5d163df6ef67dd227bf21bda86f33024396e5579b31\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n            console.log(url);\n            const transaction = await CONTRACT.registerVoter(_name, url);\n            await transaction.wait();\n            notifySuccess(\"Successfully Registered Candidate\");\n            setLoader(false);\n            router.push(\"/all-voters\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"Registration failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const APPROVE_CANDIDATE = async (address, message)=>{\n        if (!address || !message) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait, approving candidate...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.approveCandidate(address, message);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully approve Candidate\");\n            router.push(\"/approve-candidates\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"approve failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const APPROVE_VOTER = async (address, message)=>{\n        if (!address || !message) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait, approving voter...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.approveVoter(address, message);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully aapprove voter\");\n            router.push(\"/approve-voters\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"approving failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const REJECT_CANDIDATE = async (address, message)=>{\n        if (!address || !message) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait, approving candidate...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.rejectCandidate(address, message);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\" Candidate Rejected\");\n            router.push(\"/all-candidates\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"approve failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const REJECT_VOTER = async (address, message)=>{\n        console.log(address, message);\n        if (!address || !message) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait, approving voter...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.rejectVoter(address, message);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully Rejected\");\n            router.push(\"/all-voters\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"approving failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const SET_VOTING_PREIOD = async (voteTime)=>{\n        const { startTime , endTime  } = voteTime;\n        if (!startTime || !endTime) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait...\");\n        setLoader(true);\n        const startDate = new Date(startTime);\n        const endDate = new Date(endTime);\n        const startTimeMilliseconds = startDate.getTime();\n        const endTimeMilliseconds = endDate.getTime();\n        const startTimeSeconds = Math.floor(startTimeMilliseconds / 1000);\n        const endTimeSeconds = Math.floor(endTimeMilliseconds / 1000);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.setVotingPeriod(startTimeSeconds, endTimeSeconds);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully set voting period \");\n            router.push(\"/\");\n        } catch (error) {\n            setLoader(false);\n            notifyError(\"set voting period failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const UPDATE_VOTER = async (updateVoter, image, pdf)=>{\n        const { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode ,  } = updateVoter;\n        if (!_name || !_voterAddress || !_photograph || !_parentOrSpouseName || !_gender || !_dobOrAge || !_addressDetails || !_epicNumber || !_partNumberAndName || !_assemblyConstituencyNumberAndName || !_issuingAuthoritySignature || !_hologramAndBarcode || !image || !pdf) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"Upadate Voter, kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        const data = JSON.stringify({\n            _name,\n            _voterAddress,\n            _photograph,\n            _parentOrSpouseName,\n            _gender,\n            _dobOrAge,\n            _addressDetails,\n            _epicNumber,\n            _partNumberAndName,\n            _assemblyConstituencyNumberAndName,\n            _issuingAuthoritySignature,\n            _hologramAndBarcode,\n            image,\n            pdf\n        });\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_3___default()({\n                method: \"POST\",\n                url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n                data: data,\n                headers: {\n                    pinata_api_key: \"fdc22d6616dc5d66dfff\",\n                    pinata_secret_api_key: \"fd5c71930ed975f9e88af5d163df6ef67dd227bf21bda86f33024396e5579b31\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n            console.log(url);\n            const transaction = await CONTRACT.updateVoter(_name, url);\n            await transaction.wait();\n            notifySuccess(\"Successfully updated voter\");\n            setLoader(false);\n            router.push(\"/all-voters\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"Update failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const UPDATE_CANDIDATE = async (updateCandidate, image, pdf)=>{\n        const { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails ,  } = updateCandidate;\n        if (!_name || !_nominationForm || !_affidavit || !_criminalAntecedents || !_assetsAndLiabilities || !_educationalQualifications || !_electoralRollEntry || !_securityDeposit || !_partyAffiliation || !_oathOrAffirmation || !_photographs || !_proofOfAge || !_proofOfAddress || !_panCardDetails || !_voterIdCardDetails || !image || !pdf) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"Updating Candidate, kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        const data = JSON.stringify({\n            _name,\n            _nominationForm,\n            _affidavit,\n            _criminalAntecedents,\n            _assetsAndLiabilities,\n            _educationalQualifications,\n            _electoralRollEntry,\n            _securityDeposit,\n            _partyAffiliation,\n            _oathOrAffirmation,\n            _photographs,\n            _proofOfAge,\n            _proofOfAddress,\n            _panCardDetails,\n            _voterIdCardDetails,\n            image,\n            pdf\n        });\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_3___default()({\n                method: \"POST\",\n                url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n                data: data,\n                headers: {\n                    pinata_api_key: \"fdc22d6616dc5d66dfff\",\n                    pinata_secret_api_key: \"fd5c71930ed975f9e88af5d163df6ef67dd227bf21bda86f33024396e5579b31\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n            console.log(url);\n            const transaction = await CONTRACT.updateCandidate(_name, url);\n            await transaction.wait();\n            notifySuccess(\"Successfully Updated Candidate\");\n            setLoader(false);\n            router.push(\"/all-candidates\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"Update failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const CHANGE_OWNER = async (_newOwner)=>{\n        if (!_newOwner) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.changeOwner(_newOwner);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully updated \");\n            router.push(\"/\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"updated failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const RESET_CONTRACT = async ()=>{\n        notifySuccess(\"kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.resetContract();\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully RESET \");\n            router.push(\"/\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"RESET failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const GIVE_VOTE = async (_candidateAddress)=>{\n        if (!_candidateAddress) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.vote(_candidateAddress);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully voted \");\n            router.push(\"/approve-candidates\");\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"vote failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    //READ DATA FUNCTIONS\n    const INITIAL_CONTRACT_DATA = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n                const startDateN = await CONTRACT.startTime();\n                const endDateN = await CONTRACT.endTime();\n                const timestamp1 = startDateN;\n                const timestamp2 = endDateN;\n                const date1 = new Date(timestamp1 * 1000);\n                const date2 = new Date(timestamp2 * 1000);\n                const options = {\n                    year: \"numeric\",\n                    month: \"2-digit\",\n                    day: \"2-digit\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    second: \"2-digit\"\n                };\n                const item = {\n                    startDate: date1.toLocaleDateString(\"en-US\", options),\n                    endDate: date2.toLocaleDateString(\"en-US\", options),\n                    startDateN: startDateN.toNumber(),\n                    endDateN: endDateN.toNumber()\n                };\n                return item;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const GET_REGISTER_CANDIDATES = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getAllRegisteredCandidates();\n                // console.log(candidates);\n                const items = await Promise.all(candidates.map(async ({ ipfs , candidateAddress , registerId , status , voteCount , message ,  })=>{\n                    const { data: { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_3___default().get(ipfs, {});\n                    return {\n                        address: candidateAddress,\n                        registerId: registerId?.toNumber(),\n                        status,\n                        voteCount: voteCount?.toNumber(),\n                        ipfs,\n                        message,\n                        _name,\n                        _nominationForm,\n                        _affidavit,\n                        _criminalAntecedents,\n                        _assetsAndLiabilities,\n                        _educationalQualifications,\n                        _electoralRollEntry,\n                        _securityDeposit,\n                        _partyAffiliation,\n                        _oathOrAffirmation,\n                        _photographs,\n                        _proofOfAge,\n                        _proofOfAddress,\n                        _panCardDetails,\n                        _voterIdCardDetails,\n                        image,\n                        pdf\n                    };\n                }));\n                return items;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const GET_REGISTER_VOTERS = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getAllRegisteredVoters();\n                // console.log(candidates);\n                const items = await Promise.all(candidates.map(async ({ ipfs , voterAddress , registerId , status , hasVoted , message ,  })=>{\n                    const { data: { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_3___default().get(ipfs, {});\n                    return {\n                        address: voterAddress,\n                        registerId: registerId?.toNumber(),\n                        status,\n                        hasVoted,\n                        message,\n                        ipfs,\n                        _name,\n                        _voterAddress,\n                        _photograph,\n                        _parentOrSpouseName,\n                        _gender,\n                        _dobOrAge,\n                        _addressDetails,\n                        _epicNumber,\n                        _partNumberAndName,\n                        _assemblyConstituencyNumberAndName,\n                        _issuingAuthoritySignature,\n                        _hologramAndBarcode,\n                        image,\n                        pdf\n                    };\n                }));\n                return items;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const ALL_VOTERS_VOTED = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getAllVotersWhoVoted();\n                // console.log(candidates);\n                const items = await Promise.all(candidates.map(async ({ ipfs , voterAddress , registerId , status , hasVoted , message ,  })=>{\n                    const { data: { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_3___default().get(ipfs, {});\n                    return {\n                        address: voterAddress,\n                        registerId: registerId?.toNumber(),\n                        status,\n                        hasVoted,\n                        message,\n                        ipfs,\n                        _name,\n                        _voterAddress,\n                        _photograph,\n                        _parentOrSpouseName,\n                        _gender,\n                        _dobOrAge,\n                        _addressDetails,\n                        _epicNumber,\n                        _partNumberAndName,\n                        _assemblyConstituencyNumberAndName,\n                        _issuingAuthoritySignature,\n                        _hologramAndBarcode,\n                        image,\n                        pdf\n                    };\n                }));\n                //CHECK CURRENT USER VOTING STATE\n                items?.filter((user)=>user.address.toLowerCase() == userAddress ? setCheckVote(true) : setCheckVote(false));\n                return items;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const HIGHEST_VOTED_CANDIDATE = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getCurrentVotingStatus();\n                console.log(candidates);\n                const zeroAddress = \"0x0000000000000000000000000000000000000000\";\n                if (candidates?.candidateAddress.toLowerCase() === zeroAddress) return;\n                const { data: { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_3___default().get(candidates?.ipfs);\n                const candidateData = {\n                    address: candidates?.candidateAddress,\n                    registerId: candidates?.registerId?.toNumber(),\n                    status: candidates?.status,\n                    voteCount: candidates?.voteCount?.toNumber(),\n                    ipfs: candidates?.ipfs,\n                    message: candidates?.message,\n                    _name,\n                    _nominationForm,\n                    _affidavit,\n                    _criminalAntecedents,\n                    _assetsAndLiabilities,\n                    _educationalQualifications,\n                    _electoralRollEntry,\n                    _securityDeposit,\n                    _partyAffiliation,\n                    _oathOrAffirmation,\n                    _photographs,\n                    _proofOfAge,\n                    _proofOfAddress,\n                    _panCardDetails,\n                    _voterIdCardDetails,\n                    image,\n                    pdf\n                };\n                console.log(candidateData);\n                return candidateData;\n            }\n        } catch (error) {\n            notifyError(\"Something went wrong\");\n            console.log(error);\n        }\n    };\n    const WINNER = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getWinningCandidate();\n                // console.log(candidates);\n                const items = await Promise.all(candidates.map(async ({ ipfs , voterAddress , registerId , status , hasVoted , message ,  })=>{\n                    const { data: { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_3___default().get(ipfs, {});\n                    return {\n                        voterAddress,\n                        registerId: registerId?.toNumber(),\n                        status,\n                        hasVoted,\n                        message,\n                        ipfs,\n                        _name,\n                        _voterAddress,\n                        _photograph,\n                        _parentOrSpouseName,\n                        _gender,\n                        _dobOrAge,\n                        _addressDetails,\n                        _epicNumber,\n                        _partNumberAndName,\n                        _assemblyConstituencyNumberAndName,\n                        _issuingAuthoritySignature,\n                        _hologramAndBarcode,\n                        image,\n                        pdf\n                    };\n                }));\n                return items;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const GET_SINGLE_VOTER = async (address)=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (!address) return notifyError(\"Kindly provide address\");\n            const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n            const data = await CONTRACT.getVoter(address);\n            const { data: { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_3___default().get(data?.ipfs, {});\n            const voter = {\n                address: data?.voterAddress,\n                registerId: data?.registerId.toNumber(),\n                ipfs: data?.ipfs,\n                status: data?.status,\n                hasVoted: data?.hasVoted,\n                message: data?.message,\n                _name,\n                _voterAddress,\n                _photograph,\n                _parentOrSpouseName,\n                _gender,\n                _dobOrAge,\n                _addressDetails,\n                _epicNumber,\n                _partNumberAndName,\n                _assemblyConstituencyNumberAndName,\n                _issuingAuthoritySignature,\n                _hologramAndBarcode,\n                image,\n                pdf\n            };\n            return voter;\n        } catch (error) {\n            notifySuccess(\"Failed to get data, kindly reload page\");\n            console.log(error);\n        }\n    };\n    const GET_SINGLE_CANDIDATE = async (address)=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (!address) return notifyError(\"Kindly provide address\");\n            const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.VOTING_CONTRACT)();\n            const data = await CONTRACT.getCandidate(address);\n            const { data: { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_3___default().get(data?.ipfs, {});\n            console.log(_name);\n            const candidate = {\n                address: data?.candidateAddress,\n                registerId: data?.registerId.toNumber(),\n                ipfs: data?.ipfs,\n                status: data?.status,\n                voteCount: data?.voteCount.toNumber(),\n                message: data?.message,\n                _name,\n                _nominationForm,\n                _affidavit,\n                _criminalAntecedents,\n                _assetsAndLiabilities,\n                _educationalQualifications,\n                _electoralRollEntry,\n                _securityDeposit,\n                _partyAffiliation,\n                _oathOrAffirmation,\n                _photographs,\n                _proofOfAge,\n                _proofOfAddress,\n                _panCardDetails,\n                _voterIdCardDetails,\n                image,\n                pdf\n            };\n            return candidate;\n        } catch (error) {\n            notifyError(\"Failed to get data, kindly reload page\");\n            console.log(error);\n        }\n    };\n    const GIVE_DONATION = async (doneeAddress, amount)=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.BOND_CONTRACT)();\n                const transaction = await CONTRACT.giveDonation(doneeAddress, {\n                    value: ethers__WEBPACK_IMPORTED_MODULE_5__.ethers.utils.parseEther(`${amount}`)\n                });\n                await transaction.wait();\n                notifySuccess(\"Donation Successfull\");\n            }\n        } catch (err) {\n            notifyError(\"Failed to complete donation, kindly reload page\");\n            console.log(err);\n        }\n    };\n    const GET_ALL_DONATIONS = async (doneeAddress)=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            console.log({\n                doneeAddress\n            });\n            if (!doneeAddress) return [];\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_6__.BOND_CONTRACT)();\n                const contractDonators = await CONTRACT.getAllDonations(doneeAddress);\n                return contractDonators;\n            }\n        } catch (err) {\n            notifyError(\"Failed to complete donation, kindly reload page\");\n            console.error(err);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VOTING_DAPP_CONTEXT.Provider, {\n        value: {\n            GET_SINGLE_CANDIDATE,\n            GET_SINGLE_VOTER,\n            GET_REGISTER_CANDIDATES,\n            GET_REGISTER_VOTERS,\n            HIGHEST_VOTED_CANDIDATE,\n            INITIAL_CONTRACT_DATA,\n            ALL_VOTERS_VOTED,\n            WINNER,\n            notifySuccess,\n            notifyError,\n            setLoader,\n            connectWallet: _constants__WEBPACK_IMPORTED_MODULE_6__.connectWallet,\n            address,\n            checkVote,\n            OWNER_ADDRESS: _constants__WEBPACK_IMPORTED_MODULE_6__.OWNER_ADDRESS,\n            setAddress,\n            loader,\n            checkIfWalletIsConnected: _constants__WEBPACK_IMPORTED_MODULE_6__.checkIfWalletIsConnected,\n            VOTING_DAPP,\n            REGISTER_CANDIDATE,\n            REGISTER_VOTER,\n            APPROVE_VOTER,\n            APPROVE_CANDIDATE,\n            GIVE_VOTE,\n            UPDATE_CANDIDATE,\n            UPDATE_VOTER,\n            CHANGE_OWNER,\n            RESET_CONTRACT,\n            SET_VOTING_PREIOD,\n            REJECT_CANDIDATE,\n            REGISTER_VOTER,\n            REJECT_VOTER,\n            GIVE_DONATION,\n            GET_ALL_DONATIONS\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\gurup\\\\Music\\\\Edit-it\\\\Democro-chain\\\\edit\\\\context\\\\context.jsx\",\n        lineNumber: 1161,\n        columnNumber: 5\n    }, undefined);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/context.jsx\n");

/***/ }),

/***/ "./pages/_app.jsx":
/*!************************!*\
  !*** ./pages/_app.jsx ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/context */ \"./context/context.jsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_hot_toast__WEBPACK_IMPORTED_MODULE_1__, _context_context__WEBPACK_IMPORTED_MODULE_3__]);\n([react_hot_toast__WEBPACK_IMPORTED_MODULE_1__, _context_context__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nfunction App({ Component , pageProps  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_context__WEBPACK_IMPORTED_MODULE_3__.VOTER_DAPP_PROVIDER, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\gurup\\\\Music\\\\Edit-it\\\\Democro-chain\\\\edit\\\\pages\\\\_app.jsx\",\n                        lineNumber: 10,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_1__.Toaster, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\gurup\\\\Music\\\\Edit-it\\\\Democro-chain\\\\edit\\\\pages\\\\_app.jsx\",\n                        lineNumber: 11,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\gurup\\\\Music\\\\Edit-it\\\\Democro-chain\\\\edit\\\\pages\\\\_app.jsx\",\n                lineNumber: 9,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                \"data-cfasync\": \"false\",\n                src: \"/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\gurup\\\\Music\\\\Edit-it\\\\Democro-chain\\\\edit\\\\pages\\\\_app.jsx\",\n                lineNumber: 14,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"/assets/js/plugins/plugins.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\gurup\\\\Music\\\\Edit-it\\\\Democro-chain\\\\edit\\\\pages\\\\_app.jsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"/assets/js/plugins/plugin-custom.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\gurup\\\\Music\\\\Edit-it\\\\Democro-chain\\\\edit\\\\pages\\\\_app.jsx\",\n                lineNumber: 19,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"/assets/js/main.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\gurup\\\\Music\\\\Edit-it\\\\Democro-chain\\\\edit\\\\pages\\\\_app.jsx\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFBMEM7QUFDWDtBQUUwQjtBQUUxQyxTQUFTRSxHQUFHLENBQUMsRUFBRUMsU0FBUyxHQUFFQyxTQUFTLEdBQUUsRUFBRTtJQUNwRCxxQkFDRTs7MEJBQ0UsOERBQUNILGlFQUFtQjs7a0NBQ2xCLDhEQUFDRSxTQUFTO3dCQUFFLEdBQUdDLFNBQVM7Ozs7OzRCQUFJO2tDQUM1Qiw4REFBQ0osb0RBQU87Ozs7NEJBQUc7Ozs7OztvQkFDUzswQkFFdEIsOERBQUNLLFFBQU07Z0JBQ0xDLGNBQVksRUFBQyxPQUFPO2dCQUNwQkMsR0FBRyxFQUFDLGlFQUFpRTs7Ozs7b0JBQzdEOzBCQUNWLDhEQUFDRixRQUFNO2dCQUFDRSxHQUFHLEVBQUMsK0JBQStCOzs7OztvQkFBVTswQkFDckQsOERBQUNGLFFBQU07Z0JBQUNFLEdBQUcsRUFBQyxxQ0FBcUM7Ozs7O29CQUFVOzBCQUMzRCw4REFBQ0YsUUFBTTtnQkFBQ0UsR0FBRyxFQUFDLG9CQUFvQjs7Ozs7b0JBQVU7O29CQUN6QyxDQUNIO0NBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b3Rpbmctb3JnYW5pemF0aW9uLy4vcGFnZXMvX2FwcC5qc3g/NGNiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2FzdGVyIH0gZnJvbSBcInJlYWN0LWhvdC10b2FzdFwiO1xyXG5pbXBvcnQgXCIuLi9zdHlsZXMvZ2xvYmFscy5jc3NcIjtcclxuXHJcbmltcG9ydCB7IFZPVEVSX0RBUFBfUFJPVklERVIgfSBmcm9tIFwiLi4vY29udGV4dC9jb250ZXh0XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxWT1RFUl9EQVBQX1BST1ZJREVSPlxyXG4gICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cclxuICAgICAgICA8VG9hc3RlciAvPlxyXG4gICAgICA8L1ZPVEVSX0RBUFBfUFJPVklERVI+XHJcblxyXG4gICAgICA8c2NyaXB0XHJcbiAgICAgICAgZGF0YS1jZmFzeW5jPVwiZmFsc2VcIlxyXG4gICAgICAgIHNyYz1cIi9jZG4tY2dpL3NjcmlwdHMvNWM1ZGQ3MjgvY2xvdWRmbGFyZS1zdGF0aWMvZW1haWwtZGVjb2RlLm1pbi5qc1wiXHJcbiAgICAgID48L3NjcmlwdD5cclxuICAgICAgPHNjcmlwdCBzcmM9XCIvYXNzZXRzL2pzL3BsdWdpbnMvcGx1Z2lucy5qc1wiPjwvc2NyaXB0PlxyXG4gICAgICA8c2NyaXB0IHNyYz1cIi9hc3NldHMvanMvcGx1Z2lucy9wbHVnaW4tY3VzdG9tLmpzXCI+PC9zY3JpcHQ+XHJcbiAgICAgIDxzY3JpcHQgc3JjPVwiL2Fzc2V0cy9qcy9tYWluLmpzXCI+PC9zY3JpcHQ+XHJcbiAgICA8Lz5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJUb2FzdGVyIiwiVk9URVJfREFQUF9QUk9WSURFUiIsIkFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyIsInNjcmlwdCIsImRhdGEtY2Zhc3luYyIsInNyYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.jsx\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("axios");

/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("ethers");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "web3modal":
/*!****************************!*\
  !*** external "web3modal" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("web3modal");

/***/ }),

/***/ "react-hot-toast":
/*!**********************************!*\
  !*** external "react-hot-toast" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-hot-toast");;

/***/ }),

/***/ "./artifacts/contracts/ElectoralBond.sol/ElectoralBond.json":
/*!******************************************************************!*\
  !*** ./artifacts/contracts/ElectoralBond.sol/ElectoralBond.json ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"ElectoralBond","sourceName":"contracts/ElectoralBond.sol","abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"donees","outputs":[{"internalType":"uint256","name":"donorLength","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_doneeAddress","type":"address"}],"name":"getAllDonations","outputs":[{"components":[{"internalType":"address","name":"donatorAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ElectoralBond.Donator[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_doneeAddress","type":"address"}],"name":"giveDonation","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"registerDonee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610a9b806100206000396000f3fe60806040526004361061003f5760003560e01c806316b2fe2b14610044578063698f34e31461005b578063a7f8388114610098578063ffd707b8146100d5575b600080fd5b34801561005057600080fd5b506100596100f1565b005b34801561006757600080fd5b50610082600480360381019061007d919061077e565b61019f565b60405161008f91906108e8565b60405180910390f35b3480156100a457600080fd5b506100bf60048036038101906100ba919061077e565b61048a565b6040516100cc919061092a565b60405180910390f35b6100ef60048036038101906100ea919061077e565b6104a8565b005b6060806000604051806060016040528060008152602001848152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190610179929190610645565b5060408201518160020190805190602001906101969291906106cf565b50905050505050565b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561027b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610231575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156102d357602002820191906000526020600020905b8154815260200190600101908083116102bf575b50505050508152505090506000816000015167ffffffffffffffff811115610324577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561035d57816020015b61034a61071c565b8152602001906001900390816103425790505b50905060005b826000015181101561047f5760006040518060400160405280856020015184815181106103b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16815260200185604001518481518110610419577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815250905080838381518110610460577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250508080610477906109d6565b915050610363565b508092505050919050565b60006020528060005260406000206000915090508060000154905081565b60008173ffffffffffffffffffffffffffffffffffffffff16346040516104ce906108d3565b60006040518083038185875af1925050503d806000811461050b576040519150601f19603f3d011682016040523d82523d6000602084013e610510565b606091505b5050905080610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b9061090a565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160008154809291906105ab906109d6565b91905055508060020134908060018154018082558091505060019003906000526020600020016000909190919091505580600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b8280548282559060005260206000209081019282156106be579160200282015b828111156106bd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610665565b5b5090506106cb919061074c565b5090565b82805482825590600052602060002090810192821561070b579160200282015b8281111561070a5782518255916020019190600101906106ef565b5b509050610718919061074c565b5090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b8082111561076557600081600090555060010161074d565b5090565b60008135905061077881610a4e565b92915050565b60006020828403121561079057600080fd5b600061079e84828501610769565b91505092915050565b60006107b38383610886565b60408301905092915050565b6107c88161099a565b82525050565b60006107d982610955565b6107e3818561096d565b93506107ee83610945565b8060005b8381101561081f57815161080688826107a7565b975061081183610960565b9250506001810190506107f2565b5085935050505092915050565b6000610839601083610989565b91507f556e61626c6520746f20646f6e617465000000000000000000000000000000006000830152602082019050919050565b600061087960008361097e565b9150600082019050919050565b60408201600082015161089c60008501826107bf565b5060208201516108af60208501826108b5565b50505050565b6108be816109cc565b82525050565b6108cd816109cc565b82525050565b60006108de8261086c565b9150819050919050565b6000602082019050818103600083015261090281846107ce565b905092915050565b600060208201905081810360008301526109238161082c565b9050919050565b600060208201905061093f60008301846108c4565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006109a5826109ac565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109e1826109cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1457610a13610a1f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610a578161099a565b8114610a6257600080fd5b5056fea2646970667358221220629f4b1ae4fdcb249564af0e33c194ef21402eeb4d7c925b5b6e9eaedd61305364736f6c63430008000033","deployedBytecode":"0x60806040526004361061003f5760003560e01c806316b2fe2b14610044578063698f34e31461005b578063a7f8388114610098578063ffd707b8146100d5575b600080fd5b34801561005057600080fd5b506100596100f1565b005b34801561006757600080fd5b50610082600480360381019061007d919061077e565b61019f565b60405161008f91906108e8565b60405180910390f35b3480156100a457600080fd5b506100bf60048036038101906100ba919061077e565b61048a565b6040516100cc919061092a565b60405180910390f35b6100ef60048036038101906100ea919061077e565b6104a8565b005b6060806000604051806060016040528060008152602001848152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190610179929190610645565b5060408201518160020190805190602001906101969291906106cf565b50905050505050565b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561027b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610231575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156102d357602002820191906000526020600020905b8154815260200190600101908083116102bf575b50505050508152505090506000816000015167ffffffffffffffff811115610324577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561035d57816020015b61034a61071c565b8152602001906001900390816103425790505b50905060005b826000015181101561047f5760006040518060400160405280856020015184815181106103b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16815260200185604001518481518110610419577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815250905080838381518110610460577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250508080610477906109d6565b915050610363565b508092505050919050565b60006020528060005260406000206000915090508060000154905081565b60008173ffffffffffffffffffffffffffffffffffffffff16346040516104ce906108d3565b60006040518083038185875af1925050503d806000811461050b576040519150601f19603f3d011682016040523d82523d6000602084013e610510565b606091505b5050905080610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b9061090a565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160008154809291906105ab906109d6565b91905055508060020134908060018154018082558091505060019003906000526020600020016000909190919091505580600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b8280548282559060005260206000209081019282156106be579160200282015b828111156106bd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610665565b5b5090506106cb919061074c565b5090565b82805482825590600052602060002090810192821561070b579160200282015b8281111561070a5782518255916020019190600101906106ef565b5b509050610718919061074c565b5090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b8082111561076557600081600090555060010161074d565b5090565b60008135905061077881610a4e565b92915050565b60006020828403121561079057600080fd5b600061079e84828501610769565b91505092915050565b60006107b38383610886565b60408301905092915050565b6107c88161099a565b82525050565b60006107d982610955565b6107e3818561096d565b93506107ee83610945565b8060005b8381101561081f57815161080688826107a7565b975061081183610960565b9250506001810190506107f2565b5085935050505092915050565b6000610839601083610989565b91507f556e61626c6520746f20646f6e617465000000000000000000000000000000006000830152602082019050919050565b600061087960008361097e565b9150600082019050919050565b60408201600082015161089c60008501826107bf565b5060208201516108af60208501826108b5565b50505050565b6108be816109cc565b82525050565b6108cd816109cc565b82525050565b60006108de8261086c565b9150819050919050565b6000602082019050818103600083015261090281846107ce565b905092915050565b600060208201905081810360008301526109238161082c565b9050919050565b600060208201905061093f60008301846108c4565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006109a5826109ac565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109e1826109cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1457610a13610a1f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610a578161099a565b8114610a6257600080fd5b5056fea2646970667358221220629f4b1ae4fdcb249564af0e33c194ef21402eeb4d7c925b5b6e9eaedd61305364736f6c63430008000033","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "./artifacts/contracts/VotingOrganization.sol/VotingOrganization.json":
/*!****************************************************************************!*\
  !*** ./artifacts/contracts/VotingOrganization.sol/VotingOrganization.json ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"VotingOrganization","sourceName":"contracts/VotingOrganization.sol","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"_candidateAddress","type":"address"},{"internalType":"string","name":"_message","type":"string"}],"name":"approveCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_voterAddress","type":"address"},{"internalType":"string","name":"_message","type":"string"}],"name":"approveVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"approvedCandidates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"approvedVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"candidates","outputs":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllApprovedCandidates","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllApprovedVoters","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Voter[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllRegisteredCandidates","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllRegisteredVoters","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Voter[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllVotersWhoVoted","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Voter[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateAddress","type":"address"}],"name":"getCandidate","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentVotingStatus","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_voterAddress","type":"address"}],"name":"getVoter","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Voter","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWinningCandidate","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_ipfs","type":"string"}],"name":"registerCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_ipfs","type":"string"}],"name":"registerVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"registeredCandidates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"registeredVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateAddress","type":"address"},{"internalType":"string","name":"_message","type":"string"}],"name":"rejectCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_voterAddress","type":"address"},{"internalType":"string","name":"_message","type":"string"}],"name":"rejectVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resetContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"}],"name":"setVotingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_ipfs","type":"string"}],"name":"updateCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_ipfs","type":"string"}],"name":"updateVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateAddress","type":"address"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"voters","outputs":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"votersWhoVoted","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"bytecode":"","deployedBytecode":"","linkReferences":{},"deployedLinkReferences":{}}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.jsx"));
module.exports = __webpack_exports__;

})();